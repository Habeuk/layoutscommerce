<?php
use Drupal\layout_builder\Entity\LayoutBuilderEntityViewDisplay;
use Drupal\commerce_product\Entity\Product;

/**
 *
 * @file
 * Primary module hooks for layoutscommerce module.
 *
 * @DCG
 * This file is no longer required in Drupal 8.
 * @see https://www.drupal.org/node/2217931
 */

/**
 * Implements hook_theme().
 */
function layoutscommerce_theme() {
  $hooks['layoutscommerce_product_teaser_view_style'] = [
    'preprocess functions' => [
      'template_preprocess_layoutscommerce_product_teaser_view_style'
    ],
    'file' => 'layoutscommerce.theme.inc'
  ];
  return $hooks;
}


/**
 * Implements hook_entity_prepare_view().
 */
// function commerce_product_entity_prepare_view($entity_type_id, array $entities, array $displays, $view_mode) {
//   $product = Product::load(2);
//   /**
//    *
//    * @var \Symfony\Component\HttpFoundation\ParameterBag $ParameterBag
//    */
//   $ParameterBag = \Drupal::request()->attributes;
//   $ParameterBag->set('commerce_product', $product);
//   foreach ($entities as $entity) {
//     // If we have layout builder enabled.
//     if (\Drupal::moduleHandler()->moduleExists('layout_builder')) {
//       $display = $displays[$entity->bundle()];
//       // If layout builder is enabled for this display.
//       if ($display instanceof LayoutBuilderEntityViewDisplay && $display->getThirdPartySetting('layout_builder', 'enabled')) {
//         // We can't be sure if we have a view page, or just a block, so we can't
//         // target only routes generated by the Views module.
//         // \Drupal::request()->attributes->set('commerce_product_context',
//         // $entity);
//       }
//     }
//   }
//   dump(\Drupal::request()->attributes->all());
// }

